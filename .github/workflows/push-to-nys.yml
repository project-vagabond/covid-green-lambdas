name: Publish Lambdas for NYS

on:
  push:
    branches:
      - nys

jobs:
  verify-lint:
    name: Enforce Linting Rules
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [ 12.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Running lint with node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run lint

  publish-nys:
    if: github.repository_owner == 'covid-alert-ny'
    name: Publish lambdas for NYS
    runs-on: ubuntu-latest
    needs: [ verify-lint ]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: '0'

    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: '12.13.1'

    - name: Install app dependencies
      run: npm install

    - name: Bump version and push tag
      id: get-next-tag
      uses: anothrNick/github-tag-action@1.23.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: patch
        DRY_RUN: true
        TAG_CONTEXT: branch
        RELEASE_BRANCHES: nys

    - name: Package lambdas
      run: |
        npm run artifact:create

## DEV ####################################
    - name: DEV Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
        aws-region: ${{ secrets.AWS_REGION_DEV }}

    - name: DEV Publish lambda package
      env:
        VERSION: ${{ steps.get-next-tag.outputs.new_tag }}
      run: |
        aws s3 cp lambdas.zip s3://${{ secrets.BUCKET_LAMBDAS_DEV }}/covid-green-lambdas/lambdas-$VERSION.zip
        echo "::set-output name=bundle-dev::s3://${{ secrets.BUCKET_LAMBDAS_DEV }}/covid-green-lambdas/lambdas-$VERSION.zip"

## QA ####################################
    - name: QA Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_QA }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_QA }}
        aws-region: ${{ secrets.AWS_REGION_QA }}

    - name: QA Publish lambda package
      env:
        VERSION: ${{ steps.get-next-tag.outputs.new_tag }}
      run: |
        aws s3 cp lambdas.zip s3://${{ secrets.BUCKET_LAMBDAS_QA }}/covid-green-lambdas/lambdas-$VERSION.zip
        echo "::set-output name=bundle-qa::s3://${{ secrets.BUCKET_LAMBDAS_QA }}/covid-green-lambdas/lambdas-$VERSION.zip"

## PROD ####################################
    - name: PROD Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
        aws-region: ${{ secrets.AWS_REGION_PROD }}

    - name: PROD Publish lambda package
      env:
        VERSION: ${{ steps.get-next-tag.outputs.new_tag }}
      run: |
        aws s3 cp lambdas.zip s3://${{ secrets.BUCKET_LAMBDAS_PROD }}/covid-green-lambdas/lambdas-$VERSION.zip
        echo "::set-output name=bundle-prod::s3://${{ secrets.BUCKET_LAMBDAS_PROD }}/covid-green-lambdas/lambdas-$VERSION.zip"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get-next-tag.outputs.new_tag }}
        release_name: Release ${{ steps.get-next-tag.outputs.new_tag }}
        body: |
          ${{ steps.get-next-tag.outputs.new_tag }}
        draft: false
        prerelease: false




